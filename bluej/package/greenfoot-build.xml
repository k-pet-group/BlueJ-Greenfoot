<?xml version="1.0" encoding="UTF-8"?>
<project name="greenfoot-package" default="dist">

    <!-- Most of the targets in this build file are designed to be called from the
         main Greenfoot build.xml file, as they require variables defined by it. -->
    
    <patternset id="gfapidoc.files">
        <exclude name="**/.#*" />
        <include name="doc/API/**" />
    </patternset>
    
    <!-- Library files to be installed as part of Greenfoot -->
    <patternset id="bluej.libfiles">
        <exclude name="**/.#*" />
        <include name="lib/bluej.jar" />
        <include name="lib/bluejcore.jar" />
        <include name="lib/bluejeditor.jar" />
        <include name="lib/bluejext2.jar" />
        <include name="lib/lang-stride.jar" />
        <include name="lib/greenfoot.jar" />
        <include name="lib/junit-*.jar" />
        <include name="lib/hamcrest-core-1.3.jar" />
        <include name="lib/commons-logging-api-1.1.2.jar" />
        <include name="lib/diffutils-1.2.1.jar" />
        <include name="lib/httpclient-4.1.1.jar" />
        <include name="lib/httpcore-4.1.jar" />
        <include name="lib/httpmime-4.1.1.jar" />
        <include name="lib/jl1.0.1.jar" />
        <include name="lib/opencsv-2.3.jar" />
        <include name="lib/nsmenufx-2.1.8.jar"/>
        <include name="lib/guava-17.0.jar" />
        <include name="lib/wellbehavedfx-0.3.3.jar"/>
        <include name="lib/javassist-3.18.0.jar" />
        <include name="lib/classgraph-4.8.90.jar"/>
        <include name="lib/xom-1.3.7.jar" />
        <include name="lib/bluej.defs" />
        <include name="lib/greenfoot.defs" />
        <include name="lib/moe.defs" />
        <include name="lib/userlib/README.TXT" />
        <include name="lib/windowtofront.js" />
    </patternset>

    <patternset id="bluej.libdirs">
        <exclude name="**/.#*" />
        <include name="lib/images/*.gif" />
        <include name="lib/images/*.png" />
        <include name="lib/images/*.jpg" />
        <include name="lib/images/*.icns" />
        <include name="lib/afrikaans/" />
        <include name="lib/arabic/" />
        <include name="lib/catalan/" />
        <include name="lib/chinese/" />
        <include name="lib/czech/" />
        <include name="lib/danish/" />
        <include name="lib/dutch/" />
        <include name="lib/chinese/" />
        <include name="lib/czech/" />
        <include name="lib/english/" />
        <include name="lib/fonts/" />
        <include name="lib/french/" />
        <include name="lib/german/" />
        <include name="lib/greek/" />
        <include name="lib/italian/" />
        <include name="lib/japanese/" />
        <include name="lib/korean/" />
        <include name="lib/polish/" />
        <include name="lib/portuguese/" />
        <include name="lib/russian/" />
        <include name="lib/slovak/" />
        <include name="lib/spanish/" />
        <include name="lib/swedish/" />
        <include name="lib/stylesheets/" />
        <!-- greenfoot stuff -->
        <include name="lib/greenfoot/**" />
    </patternset>

    <patternset id="greenfoot.scenarios">
        <include name="scenarios/" />
    </patternset>

    <patternset id="greenfoot.license.files">
        <include name="GREENFOOT_LICENSES.txt" />
        <include name="LICENSE.txt" />
        <include name="THIRDPARTYLICENSE.txt" />
        <include name="thirdpartylicenses/**" />
    </patternset>
    
    <patternset id = "greenfoot.bluej.license.files">
        <include name="*" />
        <!-- exclude licenses only applicable to files not distributed with Greenfoot --> 
        <exclude name="EDL-v1.0.txt" />
        <exclude name="jsch-BSD.txt" />
        <exclude name="slf4j-MIT.txt" />
    </patternset>

    <target name="pre-dist">
        <delete dir="install_tmp" failonerror="false"/>
        <mkdir dir="install_tmp" />

        <!-- construct the directory structure we want for the distribution -->
        <copy todir="install_tmp" preservelastmodified="true">
            <fileset dir="${bluej_home}">
                <patternset refid="bluej.libfiles" />
                <patternset refid="bluej.libdirs" />
                <patternset refid="gfapidoc.files" />
            </fileset>
            <fileset dir="${bluej_home}/package">
                <patternset refid="greenfoot.scenarios" />
            </fileset>
        </copy>
        <copy todir="install_tmp/doc" preservelastmodified="true">
            <fileset dir="${greenfoot_home}/doc">
                <patternset refid="greenfoot.license.files" />
            </fileset>
        </copy>
        <copy todir="install_tmp/doc/thirdpartylicenses" preservelastmodified="true">
            <fileset dir="${bluej_home}/doc/thirdpartylicenses">
                <patternset refid="greenfoot.bluej.license.files" />
            </fileset>
        </copy>
            
        <copy tofile="install_tmp/README.TXT"
            file="${greenfoot_home}/doc/Greenfoot-README.txt" />
        
        <!-- jar the entire distribution into one jar file            -->
        <!-- (use zip instead of jar to avoid generation of manifest) -->
        <zip zipfile="${bluej.dist.jar}"
             basedir="install_tmp"
             compress="yes"
        />
    </target>
    
    <target name="dist">
        <antcall target="pre-dist" />
        
        <delete dir="install_tmp" />
        <mkdir dir="install_tmp" />

        <!-- Build the program which calculates the length of the  -->
        <!-- distribution jar, and stores its length in the        -->
        <!-- installer properties                                  -->
        <compile srcdir="." destdir="install_tmp">
            <include name="InstallerProps.java"/>
        </compile>

        <!-- Now run it -->
        <java
               classname="InstallerProps"
               fork="yes"
               jvm="${build_java_home}/${java_command_dir_name}/java"
            >
            <classpath>
                <pathelement location="install_tmp" />
            </classpath>
            <arg line="greenfoot-installer.props" />
        </java>

        <!-- And delete it as it's no longer needed   -->
        <delete file="install_tmp/InstallerProps.class" />

        <!-- Copy other files needed by the installer -->
        <copy todir="install_tmp" file="greenfoot-dist.jar" />
        <copy todir="install_tmp" file="greenfoot-splash.png" />

        <!-- compile the installer -->
        <!-- Note: can't use compile task here because we are setting source 6 -->
        <javac
               executable="${build_java_home}/${java_command_dir_name}/javac"
               fork="yes"
               srcdir="."
               destdir="install_tmp"
               includes="Installer.java"
               includeantruntime="false"
               debug="true"
        >
            <compilerarg line="-source 7" />
            <compilerarg line="-target 7" />
        </javac>

        <!-- bundle the resulting class into the final distribution jar file -->
        <jar jarfile="${bluej.installer.jar}"
             basedir="install_tmp"
             compress="no"
             manifest="manifest"
             whenempty="fail" />

        <!-- cleanup
             leaves greenfoot-dist.jar for distribution to whoever is
             building the windows installer and leaves
             greenfoot-dist-new.jar which is the platform independant
             distributable -->
        <delete dir="install_tmp" />
    </target>
    
    <target name="greenfoot-dist-cleanup">
        <delete dir="${bluej_home}/package/scenarios" />
        <delete>
            <fileset dir="${bluej_home}/package">
                <patternset refid="greenfoot.license.files" />
            </fileset>
        </delete>
    </target>

    <target name="mac-dist">
        <antcall target="pre-dist" />
        <delete dir="mac_tmp" />
        
        <!-- Create the directory which will be the top level directory when unzipped-->
        <property name="zip_dir" location="mac_tmp/Greenfoot ${greenfoot.version}/" />
        <mkdir dir="${zip_dir}" />
        
        <!-- Files in this list will get the executable attribute set -->
        <property name="executable_files" value="**/PkgInfo,**/JavaApplicationStub" />

        <!-- Legacy build -->
        <!-- copy the skeleton mac dir -->
        <copy todir="${zip_dir}/Greenfoot.app">
            <fileset dir="macfiles/Greenfoot-legacy.app"/> 
        </copy>

        <!-- update version number -->
        <replaceregexp byline="true">
            <regexp pattern="VERSION" />
            <substitution expression="${greenfoot.version}" />
            <fileset dir="${zip_dir}/Greenfoot.app/Contents" includes="Info.plist" />
        </replaceregexp>
        
        <!-- construct the directory structure we want for the distribution -->
        <copy todir="${zip_dir}" preservelastmodified="true">
            <fileset dir="install_tmp"/>
        </copy>
        
        <!-- The lib dir should not be in the root dir, so we move the contents to the proper mac-location -->
        <move todir="${zip_dir}/Greenfoot.app/Contents/Resources/Java">
            <fileset dir="${zip_dir}/lib/" />
        </move>
        <delete dir="${zip_dir}/Greenfoot.app/Contents/Resources/Java/lib" />

        <copy todir="${zip_dir}/Greenfoot.app/Contents/Resources/Java/javafx">
            <fileset dir="${openjfx_path}" />
        </copy>

        <!-- Move the documentation into the app: -->
        <move todir="${zip_dir}/Greenfoot.app/Contents/Resources">
            <fileset dir="${zip_dir}">
                <patternset refid="gfapidoc.files" />
            </fileset>
        </move>
        <delete dir="${zip_dir}/doc" />


        <!-- ZIP it -->
        <zip destfile="${greenfootlegacy.dist.mac}" duplicate="fail">
            <zipfileset dir="mac_tmp" excludes="${executable_files}" />
            <!-- Make the files executable that need to be executable -->
            <zipfileset dir="mac_tmp" filemode="755" includes="${executable_files}" />
        </zip>
        
        <!-- Bundled JDK build -->
        <!-- rename Greenfoot.app to Greenfoot-legacy.app -->
        <move file="${zip_dir}/Greenfoot.app" tofile="${zip_dir}/Greenfoot-legacy.app" />
            
        <!-- copy the skeleton mac dir -->
        <copy todir="${zip_dir}/Greenfoot.app" preservelastmodified="true">
            <fileset dir="macfiles/Greenfoot.app"/>
        </copy>

        <!-- build the native launcher -->
        <exec dir="macfiles/nativelauncher/" executable="/bin/bash">
            <arg value="compile.sh"/>
            <env key="JAVA_HOME" value="${build_java_home}"/>
        </exec>
        
        <!-- copy the native launcher into place -->
        <copy file="macfiles/nativelauncher/JavaAppLauncher" todir="${zip_dir}/Greenfoot.app/Contents/MacOS" />
        
        <!-- update version number -->
        <replaceregexp byline="true">
            <regexp pattern="VERSION" />
            <substitution expression="${greenfoot.version}" />
            <fileset dir="${zip_dir}/Greenfoot.app/Contents" includes="Info.plist" />
        </replaceregexp>
        
        <!-- Move contents from legacy app to new app -->
        <move file="${zip_dir}/Greenfoot-legacy.app/Contents/Resources/Java"
            todir="${zip_dir}/Greenfoot.app/Contents/Resources" />
        <move file="${zip_dir}/Greenfoot-legacy.app/Contents/Resources/doc"
              todir="${zip_dir}/Greenfoot.app/Contents/Resources" />
        
        <!-- Remove the legacy app -->
        <delete dir="${zip_dir}/Greenfoot-legacy.app" />

        <property name="executable_files2" value="**/PkgInfo,**/JavaAppLauncher" />
        <chmod perm="+x">
            <fileset dir="${zip_dir}/Greenfoot.app/Contents" includes="${executable_files2}" />
        </chmod>
        
        <chmod perm="+x" file="bundle-mac.sh" />
        <exec executable="bundle-mac.sh" resolveexecutable="true" outputproperty="bundleoutput">
            <arg value="${zip_dir}" />
            <arg value="Greenfoot.app" />
            <arg value="${mac_bundled_jdk_path}" />
            <arg value="${greenfoot.dist.mac}" />
        </exec>
        <echo message="${bundleoutput}"/>
        
        <delete dir="mac_tmp" />
        <antcall target="greenfoot-dist-cleanup" />
    </target>

    <!-- To make sure Windows paths don't have problems with escapes, replace
             backslash with forward slash.
             So C:\Java\jdk1.8.0_60 becomes c:/Java/jdk1.8.0_60 -->
    <loadresource property="mingw_jdk">
        <propertyresource name="build_java_home"/>
        <filterchain>
            <tokenfilter>
                <filetokenizer/>
                <replacestring from="\" to="/"/>
            </tokenfilter>
        </filterchain>
    </loadresource>

    <target name="windows-launcher">
        <!-- build launcher -->
        <exec dir="winlaunch" executable="${mingw_root}/bin/mingw32-make.exe" failonerror="true">
            <arg line="clean gflaunch.exe BUILD=greenfoot JDKDIR='${mingw_jdk}'"/>
            <env key="PATH" path="${mingw_root}/bin:${env.PATH}"/>
        </exec>
    </target>

    <target name="windows-launcher-usb">
        <!-- build launcher -->
        <exec dir="winusblaunch" executable="${mingw_root}/bin/mingw32-make.exe" failonerror="true">
            <arg line="clean greenfoot.exe BUILD=greenfoot JDKDIR='${mingw_jdk}'"/>
            <env key="PATH" path="${mingw_root}/bin:${env.PATH}"/>
        </exec>
    </target>

    <target name="windows-standalone" depends="dist,windows-launcher,windows-launcher-usb">
        <mkdir dir="winsetup/standalone"/>
        <delete dir="winsetup/standalone/bluej" failonerror="false"/>
        <delete dir="winsetup/standalone/greenfoot" failonerror="false"/>
        <delete dir="winsetup/standalone" includes="*.exe" />
        <unzip src="greenfoot-dist.jar" dest="winsetup/standalone/greenfoot" />

        <!-- Copy top-level special launcher -->
        <copy todir="winsetup/standalone" file="winusblaunch/greenfoot.exe"/>

        <!-- Copy usual launcher -->
        <copy tofile="winsetup/standalone/greenfoot/Greenfoot.exe" file="winlaunch/gflaunch.exe"/>

        <!-- Copy the JDK to be bundled -->
        <copy todir="winsetup/standalone/greenfoot/jdk">
            <fileset dir="${win_bundled_jdk_path}" />
        </copy>

        <copy todir="winsetup/standalone/greenfoot/lib/javafx">
            <fileset dir="${openjfx_path}" />
        </copy>

        <!-- Fix the path to the JDK in greenfoot.defs -->
        <replaceregexp byline="true">
            <regexp pattern="#greenfoot\.windows\.vm=.*"/>
            <substitution expression="greenfoot.windows.vm=jdk"/>
            <fileset dir="winsetup/standalone/greenfoot/lib" includes="greenfoot.defs"/>
        </replaceregexp>

        <!-- Adjust the home directory (this is meant to be bluej.userHome, not greenfoot.userHome) -->
        <replaceregexp byline="true">
            <regexp pattern="#bluej\.userHome=.*"/>
            <substitution expression="bluej.userHome=userhome"/>
            <fileset dir="winsetup/standalone/greenfoot/lib" includes="greenfoot.defs"/>
        </replaceregexp>


        <zip destfile="winsetup/greenfoot-standalone-${greenfoot.version}.zip">
            <zipfileset dir="winsetup/standalone"/>
        </zip>

        <delete dir="winsetup/standalone" />
    </target>

    <target name="windows-msi-dist" depends="dist,windows-launcher">
        <delete dir="winsetup/SourceDir" />
        <delete dir="winsetup" includes="*.wixobj" />
        <unzip src="greenfoot-dist.jar" dest="winsetup/SourceDir" />

        <exec dir="winsetup" executable="${wix_bin}/candle.exe">
            <arg line="-arch x64"/>
            <arg line="CheckboxExtrasDlg.wxs"/>
        </exec>
        
        <exec dir="winsetup" executable="${wix_bin}/candle.exe">
            <arg line="-arch x64"/>
            <arg line="ui.wxs"/>
        </exec>
        
        <exec dir="winsetup" executable="${wix_bin}/candle.exe">
            <arg line="-arch x64"/>
            <arg line="greenfoot.wxs"/>
        </exec>
        
        <!-- The heat tool scans all the files in SourceDir and generates
             a WiX file that has all the XML needed for installing all those files -->
        <exec dir="winsetup" executable="${wix_bin}/heat.exe">
            <arg line="dir SourceDir -cg GreenfootFiles -dr INSTALLDIR -ke -gg -srd -sfrag -sreg -template fragment -out greenfoot-install-files.wxs"/>
        </exec>
        <exec dir="winsetup" executable="${wix_bin}/candle.exe">
            <arg line="-arch x64"/>
            <arg line="greenfoot-install-files.wxs"/>
        </exec>
        
        <exec dir="winsetup" executable="${wix_bin}/light.exe">
            <arg line="-ext WixUIExtension -loc greenfoot.wxl greenfoot.wixobj CheckboxExtrasDlg.wixobj ui.wixobj greenfoot-install-files.wixobj -o greenfoot-${greenfoot.version}.msi"/>
        </exec>
        <delete dir="winsetup/SourceDir" />
    </target>

    <target name="windows-msi-bundled-dist" depends="dist,windows-launcher">
        <delete dir="winsetup/SourceDir" />
        <delete dir="winsetup" includes="*.wixobj" />
        <unzip src="greenfoot-dist.jar" dest="winsetup/SourceDir" />
        
        <!-- Fix the path to the JDK in bluej.defs -->
        <replaceregexp byline="true">
            <regexp pattern="#greenfoot\.windows\.vm=.*"/>
            <substitution expression="greenfoot.windows.vm=jdk"/>
            <fileset dir="winsetup/SourceDir/lib" includes="greenfoot.defs"/>
        </replaceregexp>

        <!-- Copy the JDK to be bundled -->
        <copy todir="winsetup/SourceDir/jdk">
            <fileset dir="${win_bundled_jdk_path}" />
        </copy>

        <copy todir="winsetup/SourceDir/lib/javafx">
            <fileset dir="${openjfx_path}" />
        </copy>
        
        <!-- The heat tool scans all the files in SourceDir and generates
             a WiX file that has all the XML needed for installing all those files -->
        <exec dir="winsetup" executable="${wix_bin}/heat.exe">
            <arg line="dir SourceDir -cg GreenfootFiles -dr INSTALLDIR -ke -gg -srd -sfrag -template fragment -out greenfoot-install-files.wxs"/>
        </exec>

        <exec dir="winsetup" executable="${wix_bin}/candle.exe">
            <arg line="-arch x64"/>
            <arg line="CheckboxExtrasDlg.wxs"/>
        </exec>
            
        <exec dir="winsetup" executable="${wix_bin}/candle.exe">
            <arg line="-arch x64"/>
            <arg line="ui.wxs"/>
        </exec>
            
        <exec dir="winsetup" executable="${wix_bin}/candle.exe">
            <arg line="-arch x64"/>
            <arg line="greenfoot.wxs"/>
        </exec>
            
        <exec dir="winsetup" executable="${wix_bin}/candle.exe">
            <arg line="-arch x64"/>
            <arg line="greenfoot-install-files.wxs"/>
        </exec>
            
        <exec dir="winsetup" executable="${wix_bin}/light.exe">
            <arg line="-ext WixUIExtension -loc greenfoot.wxl greenfoot.wixobj CheckboxExtrasDlg.wixobj ui.wixobj greenfoot-install-files.wixobj -o greenfoot-${greenfoot.version}-bundled.msi"/>
        </exec>
        <delete dir="winsetup/SourceDir" />
    </target>

    <target name="debian-dist">
        <mkdir dir="gfdeb" />
        <copy todir="gfdeb">
            <fileset dir="gfdebianfiles" includes="DEBIAN/**" />
        </copy>
        
        <mkdir dir="gfdeb/usr" />
        <mkdir dir="gfdeb/usr/bin" />
        <copy todir="gfdeb/usr/bin" file="gfdebianfiles/greenfoot" />
        <chmod perm="ugo+x" file="gfdeb/usr/bin/greenfoot" verbose="true" />

        <!-- lib files -->
        <mkdir dir="gfdeb/usr/share/greenfoot" />
        <mkdir dir="gfdeb-lib-tmp" />
        <copy todir="gfdeb-lib-tmp">
            <fileset dir="${bluej_home}">
                <patternset refid="bluej.libdirs" />
                <patternset refid="bluej.libfiles" />
            </fileset>
        </copy>
        <move todir="gfdeb/usr/share/greenfoot">
            <fileset dir="gfdeb-lib-tmp/lib">
                <patternset includes="**" />
            </fileset>
        </move>
        <delete dir="gfdeb-lib-tmp" />

        <!-- examples and documentation -->
        <mkdir dir="gf-examples-tmp" />
        <copy todir="gf-examples-tmp">
            <fileset dir="${bluej_home}/package">
                <patternset refid="greenfoot.scenarios" />
            </fileset>
            <fileset dir="${bluej_home}/package">
                <patternset refid="greenfoot.license.files" />
            </fileset>
        </copy>
        
        <mkdir dir="gfdeb/usr/share/doc/Greenfoot" />
        <move todir="gfdeb/usr/share/doc/Greenfoot">
            <fileset dir="gf-examples-tmp">
                <patternset includes="**" />
            </fileset>
        </move>
        <delete dir="gf-examples-tmp" />
        
        <mkdir dir="gf-apidoc-tmp" />
        <copy todir="gf-apidoc-tmp">
            <fileset dir="${bluej_home}">
                <patternset refid="gfapidoc.files" />
            </fileset>
        </copy>
        <mkdir dir="gfdeb/usr/share/doc/Greenfoot/API" />
        <move todir="gfdeb/usr/share/doc/Greenfoot/API">
            <fileset dir="gf-apidoc-tmp/doc/API">
                <patternset includes="**" />
            </fileset>
        </move>
        
        <delete dir="gf-apidoc-tmp" />    
            
        
        <copy todir="gfdeb/usr/share/doc/Greenfoot" file="${greenfoot_home}/doc/LICENSE.txt" />
        <copy todir="gfdeb/usr/share/doc/Greenfoot" file="${greenfoot_home}/doc/THIRDPARTYLICENSE.txt" />
        <copy tofile="gfdeb/usr/share/doc/Greenfoot/README.txt" file="${greenfoot_home}/doc/Greenfoot-README.txt" />

        <!-- desktop app extras -->
        <copy todir="gfdeb/usr/share">
            <fileset dir="gfdebianfiles">
                <patternset includes="applications/**,icons/**,pixmaps/**" />
            </fileset>
        </copy>

        <!-- update version number -->
        <replaceregexp byline="true">
            <regexp pattern="VERSION" />
            <substitution expression="${greenfoot.version}" />
            <fileset dir="gfdeb/DEBIAN" includes="control" />
        </replaceregexp>
        
        <!-- you must do this as root, sigh -->
        <!-- (but we can also do it using fakeroot -->
        <chown owner="root">
            <fileset dir="gfdeb">
                <patternset includes="**" />
            </fileset>
            <dirset dir="gfdeb">
                <patternset includes="**" />
            </dirset>
        </chown>
        <chgrp group="root">
            <fileset dir="gfdeb">
                <patternset includes="**" />
            </fileset>
            <dirset dir="gfdeb">
                <patternset includes="**" />
            </dirset>
        </chgrp>
        <chmod perm="g-w">
            <fileset dir="gfdeb">
                <patternset includes="**" />
            </fileset>
            <dirset dir="gfdeb">
                <patternset includes="**" />
            </dirset>
        </chmod>

        <chmod perm="755" file="gfdeb/DEBIAN/postinst" />
        <chmod perm="755" file="gfdeb/DEBIAN/postrm" />
        <exec executable="dpkg-deb" searchpath="true">
            <arg value="-b" />
            <arg file="gfdeb" />
            <arg value="greenfoot-${greenfoot.version}${greenfoot.rcsuffix}.deb" />
        </exec>
        
        <delete dir="gfdeb" />
    </target>

    <target name="debian-bundled-dist">
        <mkdir dir="gfdeb" />
        <copy todir="gfdeb">
            <fileset dir="gfdebianfiles" includes="DEBIAN/**" />
        </copy>
        <copy todir="gfdeb" overwrite="true">
            <fileset dir="gfdebianfiles-bundled" includes="DEBIAN/**" />
        </copy>

        <mkdir dir="gfdeb/usr" />
        <mkdir dir="gfdeb/usr/bin" />
        <copy todir="gfdeb/usr/bin" file="gfdebianfiles-bundled/greenfoot" />
        <chmod perm="ugo+x" file="gfdeb/usr/bin/greenfoot" verbose="true" />

        <!-- lib files -->
        <mkdir dir="gfdeb/usr/share/greenfoot" />
        <mkdir dir="gfdeb-lib-tmp" />
        <copy todir="gfdeb-lib-tmp">
            <fileset dir="${bluej_home}">
                <patternset refid="bluej.libdirs" />
                <patternset refid="bluej.libfiles" />
            </fileset>
        </copy>
        <mkdir dir="gfdeb-lib-tmp/lib/javafx"/>
        <copy todir="gfdeb-lib-tmp/lib/javafx">
            <fileset dir="${openjfx_path}"/>
        </copy>
        <move todir="gfdeb/usr/share/greenfoot">
            <fileset dir="gfdeb-lib-tmp/lib">
                <patternset includes="**" />
            </fileset>
        </move>
        <delete dir="gfdeb-lib-tmp" />

        <mkdir dir="gfdeb/usr/share/greenfoot/jdk" />
        <!-- Need to preserve permissions, which requires cp instead of copy task: -->
        <exec executable="cp">
            <arg value="-r"/>
            <arg value="${deb_bundled_jdk_path}/."/>
            <arg value="gfdeb/usr/share/greenfoot/jdk"/>
        </exec>
        

        <!-- examples and documentation -->
        <mkdir dir="gf-examples-tmp" />
        <copy todir="gf-examples-tmp">
            <fileset dir="${bluej_home}/package">
                <patternset refid="greenfoot.scenarios" />
            </fileset>
            <fileset dir="${bluej_home}/package">
                <patternset refid="greenfoot.license.files" />
            </fileset>
        </copy>

        <mkdir dir="gfdeb/usr/share/doc/Greenfoot" />
        <move todir="gfdeb/usr/share/doc/Greenfoot">
            <fileset dir="gf-examples-tmp">
                <patternset includes="**" />
            </fileset>
        </move>
        <delete dir="gf-examples-tmp" />

        <mkdir dir="gf-apidoc-tmp" />
        <copy todir="gf-apidoc-tmp">
            <fileset dir="${bluej_home}">
                <patternset refid="gfapidoc.files" />
            </fileset>
        </copy>
        <mkdir dir="gfdeb/usr/share/doc/Greenfoot/API" />
        <move todir="gfdeb/usr/share/doc/Greenfoot/API">
            <fileset dir="gf-apidoc-tmp/doc/API">
                <patternset includes="**" />
            </fileset>
        </move>

        <delete dir="gf-apidoc-tmp" />


        <copy todir="gfdeb/usr/share/doc/Greenfoot" file="${greenfoot_home}/doc/LICENSE.txt" />
        <copy todir="gfdeb/usr/share/doc/Greenfoot" file="${greenfoot_home}/doc/THIRDPARTYLICENSE.txt" />
        <copy tofile="gfdeb/usr/share/doc/Greenfoot/README.txt" file="${greenfoot_home}/doc/Greenfoot-README.txt" />

        <!-- desktop app extras -->
        <copy todir="gfdeb/usr/share">
            <fileset dir="gfdebianfiles">
                <patternset includes="applications/**,icons/**,pixmaps/**" />
            </fileset>
        </copy>

        <!-- update version number -->
        <replaceregexp byline="true">
            <regexp pattern="VERSION" />
            <substitution expression="${greenfoot.version}" />
            <fileset dir="gfdeb/DEBIAN" includes="control" />
        </replaceregexp>

        <!-- you must do this as root, sigh -->
        <!-- (but we can also do it using fakeroot -->
        <chown owner="root">
            <fileset dir="gfdeb">
                <patternset includes="**" />
            </fileset>
            <dirset dir="gfdeb">
                <patternset includes="**" />
            </dirset>
        </chown>
        <chgrp group="root">
            <fileset dir="gfdeb">
                <patternset includes="**" />
            </fileset>
            <dirset dir="gfdeb">
                <patternset includes="**" />
            </dirset>
        </chgrp>
        <chmod perm="g-w">
            <fileset dir="gfdeb">
                <patternset includes="**" />
            </fileset>
            <dirset dir="gfdeb">
                <patternset includes="**" />
            </dirset>
        </chmod>

        <chmod perm="755" file="gfdeb/DEBIAN/postinst" />
        <chmod perm="755" file="gfdeb/DEBIAN/postrm" />
        <exec executable="dpkg-deb" searchpath="true">
            <arg value="-b" />
            <arg file="gfdeb" />
            <arg value="greenfoot-bundled-${greenfoot.version}${greenfoot.rcsuffix}.deb" />
        </exec>

        <delete dir="gfdeb" />
    </target>


    <target name="clean">
        <delete file="greenfoot-dist.jar" />
        <delete file="greenfoot-dist-new.jar" />
        <delete file="winsetup/bluejsetup.exe" />
        <delete dir="install_tmp" />
    </target>

    <target name="urls-rc">
        <echo message="Mac:"/>
        <test_url system="greenfoot" filename="rc/Greenfoot-mac-${greenfoot.version.nodots}${greenfoot.rcsuffix}.zip"/>
        <echo message="Windows MSI:"/>
        <test_url system="greenfoot" filename="rc/Greenfoot-windows-${greenfoot.version.nodots}${greenfoot.rcsuffix}.msi"/>
        <echo message="Windows ZIP:"/>
        <test_url system="greenfoot" filename="rc/Greenfoot-windows-${greenfoot.version.nodots}${greenfoot.rcsuffix}.zip"/>
        <echo message="Linux:"/>
        <test_url system="greenfoot" filename="rc/Greenfoot-linux-${greenfoot.version.nodots}${greenfoot.rcsuffix}.deb"/>
        <echo message="Generic:"/>
        <test_url system="greenfoot" filename="rc/Greenfoot-generic-${greenfoot.version.nodots}${greenfoot.rcsuffix}.jar"/>
    </target>

    <target name="urls-final">
        <echo message="Mac:"/>
        <test_url system="greenfoot" filename="Greenfoot-mac-${greenfoot.version.nodots}.zip"/>
        <echo message="Windows MSI:"/>
        <test_url system="greenfoot" filename="Greenfoot-windows-${greenfoot.version.nodots}.msi"/>
        <echo message="Windows ZIP:"/>
        <test_url system="greenfoot" filename="Greenfoot-windows-${greenfoot.version.nodots}.zip"/>
        <echo message="Linux:"/>
        <test_url system="greenfoot" filename="Greenfoot-linux-${greenfoot.version.nodots}.deb"/>
        <echo message="Generic:"/>
        <test_url system="greenfoot" filename="Greenfoot-generic-${greenfoot.version.nodots}.jar"/>
    </target>


</project>
